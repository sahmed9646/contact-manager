{"version":3,"sources":["components/layouts/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","to","icon","faHome","faPlus","faQuestion","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","onShowClick","onClickDelete","a","delete","name","email","phone","onClick","faSortDown","style","cursor","bind","faTimes","float","color","faPencilAlt","fontSize","marginRight","prototypes","PropTypes","string","isRequired","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","uuid","Axios","post","history","push","EditContact","updContact","match","params","put","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b70710bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHome, faPlus, faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm bg-primary mb-3 py-0 navbar-dark\">\r\n        <div className=\"container\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            {branding}\r\n          </Link>\r\n          <div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\" className=\"nav-link\">\r\n                  <FontAwesomeIcon icon={faHome} /> Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                  <FontAwesomeIcon icon={faPlus} />\r\n                  Add\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/about\" className=\"nav-link\">\r\n                  <FontAwesomeIcon icon={faQuestion} /> About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({\r\n      contacts: res.data,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSortDown,\r\n  faTimes,\r\n  faPencilAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n  onShowClick = () => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo,\r\n    });\r\n  };\r\n  onClickDelete = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({\r\n      type: \"DELETE_CONTACT\",\r\n      payload: id,\r\n    });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <FontAwesomeIcon\r\n                  onClick={this.onShowClick}\r\n                  icon={faSortDown}\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <FontAwesomeIcon\r\n                  onClick={this.onClickDelete.bind(this, id, dispatch)}\r\n                  icon={faTimes}\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <FontAwesomeIcon\r\n                    onClick={this.onShowClick}\r\n                    icon={faPencilAlt}\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      fontSize: \"1.5rem\",\r\n                      marginRight: \"2rem\",\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email : {email}</li>\r\n                  <li className=\"list-group-item\">Phone : {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.prototypes = {\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <div>\r\n                <h1 className=\"display-4 mb-2\">\r\n                  <span className=\"text-danger\">Contact</span> List\r\n                </h1>\r\n              </div>\r\n              {contacts.map((contact) => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  id={contact.id}\r\n                  name={contact.name}\r\n                  email={contact.email}\r\n                  phone={contact.phone}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label} : </label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\"> {error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\nimport uuid from \"react-uuid\";\r\nimport Axios from \"axios\";\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const newContact = {\r\n      id: uuid(),\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"This is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"This is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"This is Required\" } });\r\n      return;\r\n    }\r\n    const res = await Axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({\r\n      type: \"ADD_CONTACT\",\r\n      payload: res.data,\r\n    });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\r\n                    Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-secondary btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layouts/TextInputGroup\";\r\nimport uuid from \"react-uuid\";\r\nimport Axios from \"axios\";\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"This is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"This is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"This is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({\r\n      type: \"UPDATE_CONTACT\",\r\n      payload: res.data,\r\n    });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\r\n                    Number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-secondary btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h2>About us</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Not Found\r\n      </h1>\r\n      <p className=\"lead\">The Page You Are Looking For Is Not Available</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/layouts/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"></Header>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}